#Eισαγωγη παικτων

players = int(input('Δωσε αριθμο παικτων ')) # Διαβαζουμε τον αριθμο των παικτων που θα συμμετασχουν στο παιχνιδι.
print ('players = ', players) # Τυπωνει τον αριθμο των παικτων που θα συμμετασχουν στο παιχνιδι.
int(players)


# Τελος εισαγωγης παικτων

# ..................................................................................................


# Διαδικασια για να καθοριστει το επιπεδο δυσκολιας
print('Εκ μερους του παιχνιδιου, παρακαλουμε  να απαντησετε στο επιπεδο δυσκολιας μονο με αριθμους 1(Ευκολο) η 2(Μετριο) η 3(Δυσκολο) ')

level = input('Δωσε βαθμο δυσκολιας ')
n = 0 # Mετρητης ο οποιος δειχνει αν το επιπεδο ειναι ενα εκ των ζητουμενων ευκολο/μετριο/δυσκολο.
# Αν ν = 3 σημαινει οτι και τα τρια τεστ ειναι λαθος αρα πρεπει να ξαναδιαβαστει το επιπεδο καθως δε δωθηκε σωστη απαντηση.

if level != '1' :
    n += 1 # Αν δεν ειναι easy τοτε n = 1
    if level != '2' :
        n += 1 # Αν δεν ειναι medium  τοτε n = 2
        if level != '3' :
            n += 1 # Αν δε ειναι hard τοτε n = 3

if n == 3: #Aν n = 3 τοτε πρεπει να ξαναδωθει τιμη στο level
    f = 'false'
    print('Παρακαλω εισαγετε ξανα βαθμο δυσκολιας, σωστα αυτη τη φορα επιλεγοντας εναν εκ των 1 = easy, 2 = medium, 3 = hard ')
    while f != 'true' :
        level = input('Δωσε βαθμο δυσκολιας ')
        if level == '1':
            f = 'true'
        if level == '2':
            f = 'true'
        if level == '3':
            f = 'true'

#Τελος διαδικασιας επιπεδου δυσκολιας

#.................................................................................................


#Αλφαβητικη ταξινομηση


listofplayers = [] #Η λιστα των παικτων η οποια στην αρχη ειναι κενη.

for i in range (players):
    name = str(input('Δωσε ονομα ')) #Διαβαζεται το ονομα του εκαστοτε παικτη που θα παιξει.
    listofplayers.append(name) #Το ονομα προστιθεται στην κενη λιστα, η οποια γεμιζει σιγα σιγα.
    

listofplayers.sort()
print(listofplayers) #Εδω ταξινομειται η λιστα ονοματων με αλφαβητικη σειρα.


#Τελος αλφαβητικης ταξινομησης 

#.............................................................................................................

if level == '1':
    listofcards = [] #Η πρωτη λιστα με καρτες. Θα χρησιμοποιηθει για την αναπαρασταση των κλειστων φυλλων.
    x1 = []
    x2 = []
    x3 = []
    x4 = []
    for i in range (0, 4):
        x1.append('  XXX  ')
        x2.append('  XXX  ') 
        x3.append('  XXX  ')
        x4.append('  XXX  ')
    listofcards = [ x1, x2, x3, x4]
    substitute1 = listofcards #Την αποθηκευω σε μεταβλητη substitute1 σε περιπτωση που τροποποιηθει η listofcards1 και τη χρειαστω στην αρχικη της μορφη

    #............................................................................................................................

    # EASY LEVEL

    listofcards2 = []
    HEART   = ("\u2665")  #Καρδια/Κουπα
    SPADES  = ("\u2663")  #Σπαθι/Τριφυλλι                           
    CLUB    = ("\u2660")  #Μπαστουνι
    DIAMOND = ("\u2666")  #Ρομβος/Καρω


    for i in range (0,16):
        if i <= 3:
            listofcards2.append('10') #Στην 1η τετραδα της λιστας 16 θεσεων αντιστοιχει ο αριθμος 10
        elif i <= 7:
            listofcards2.append('J')  #Στην 2η τετραδα της λιστας 16 θεσεων αντιστοιχει η φιγουρα του Βαλε (J)
        elif i <= 11:
            listofcards2.append('Q')  #Στην 3η τετραδα της λιστας 16 θεσεων αντιστοιχει η φιγουρα της Νταμας (Q)
        else:
            listofcards2.append('K')  #Στην 4η τετραδα της λιστας 16 θεσεων αντιστοιχει η φιγουρα του Ρηγα (Κ)



    for i in range (0,16,4):
        listofcards2[i] += HEART    #Στις θεσεις 0, 4, 8, 12 τοποθετειται το συμβολο της κουπας ωστε να υπαρχει 10, J, Q, K σε κουπα.
    for i in range (1,16,4):
        listofcards2[i] += SPADES   #Στις θεσεις 1, 5, 9, 13 τοποθετειται το συμβολο του σπαθιου ωστε να υπαρχει 10, J, Q, K σε σπαθι.
    for i in range (2,16,4):
        listofcards2[i] += CLUB     #Στις θεσεις 2, 6, 10, 14 τοποθετειται το συμβολο του μπαστουνιου ωστε να υπαρχει 10, J, Q, K σε μπαστουνι. 
    for i in range (3,16,4):
        listofcards2[i] += DIAMOND  #Στις θεσεις 3, 7, 11, 15 τοποθετειται το συμβολο του καρω ωστε να υπαρχει 10, J, Q, K σε καρω.



    import random
    random.shuffle(listofcards2) #Σε αυτο το σημειο ανακατευουμε τυχαια τις καρτες του πινακα με τη συναρτηση  shuffle. Καθε φορα η λιστα ανακατευεται διαφορετικα!


    substitute = listofcards2 #Αποθηκευω στη μεταβλητη substitute τη λιστα ως εχει διοτι θα την ξανατροποποιησω και μπορει να χρειστει στην τωρινη της μορφη.

    randomlist1 = [] 
    randomlist2 = []
    #Σε αυτο το σημειο φτιαχνω 4 κενες λιστες οι οποιες θα μου φανουν χρησιμες παρακατω. Σκοπος ειναι σε καθε λιστα να προσθετουμε 4 στοιχεια 
    randomlist3 = []
    randomlist4 = []


    for i in range (0,4):
        randomlist1.append(listofcards2[i])
    for i in range (4,8):
        randomlist2.append(listofcards2[i])
    for i in range (8,12):
        randomlist3.append(listofcards2[i])
    for i in range (12,16):
        randomlist4.append(listofcards2[i])

    #Στις προηγουμενες επαναληψεις προσθεσαμε σε καθε λιστα 4 στοιχεια της listofcards2.
    #Ετσι διαιρεσαμε την αρχικη λιστα σε 4 υπολιστες που η καθε μια περιεχει 4 καρτες οπως μας τις παρεδωσε η shuffle
    #Σκοπος ειναι να εμφανιζουμε τις καρτες σε 4 γραμμες, 4 καρτες τη φορα. Εμφανιζοντας μια λιστα τεσσαρων στοιχειων τη φορα επιτυγχανεται αυτο.


    listofcards2 = [randomlist1, randomlist2, randomlist3, randomlist4] #Προσθετω στην λιστα καρτων τις υπολιστες


    listofscore = [] #Λιστα στην οποια προσθετουμε στην πορεια τα σκορ ολων των παικτων. Τωρα μηδενιζουμε τη λιστα.
    score = 0 #Μεταβλητη score η οποια λειτουργει σαν μετρητης του καθε παικτη ξεχωριστα. Μηδενιζεται καθως λειτουργει ως μετεπειτα αθροιστης.

    n = 0 #Το n λειτουργει σαν μετρητης ανοιχτων καρτων. Οταν το n = 16 σημαινει οτι ολες οι καρτες ανοιξαν και σταματαει το παιχνιδι.

    for c in range (0,4):
        print(c+1, listofcards2[c])#Σε αυτο το σημειο τυπωνονται ολες οι καρτες ανοιχτες οπως ζητειται απο την εκφωνηση.

    score=[]
    for i in range(players):
        score.append(0)

    i = 0 #Οπου i μετρητης παικτων στη μετεπειτα while. Εδω μηδενιζουμε το μετρητη.

    while n < 16: #Οσο n < 16 συνεχιζεται το παιχνιδι.

         while i < players : #Προσπελαση ολων των παικτων ωστε να δωθουν δυο καρτες απο τον καθενα.  

    #Τελος ελεγχου ειδικων καρτων                

            print('Παικτη ',i+1,' δωσε γραμμη ')
            gr1 = int(input ()) #Οπου gr1 ειναι η γραμμη στον πινακα ,απο την οποια θα ανοιξει η πρωτη καρτα. 
            print ('Παικτη ',i+1,' δωσε στηλη ')
            st1 = int(input ()) #Οπου st1 ειναι η στηλη στον πινακα , απο την οποια θα ανοιξει η πρωτη καρτα.


            
            while gr1 > 4: #Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                gr1 = int(input ('Παικτη ξαναδωσε γραμμη '))
            while st1 > 4: #Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                st1 = int(input ('Παικτη ξαναδωσε στηλη '))

            while listofcards[gr1-1][st1-1] != ('  XXX  '): #Σε περιπτωση που η καρτα που επιλεχθηκε απο τον χρηστη ειναι ηδη ανοιχτη ισχυουν τα παρακατω:
                print('Η καρτα ειναι ηδη ανοιχτη! Ξαναδωσε ')
                print('Παικτη ',i+1,' δωσε γραμμη ')
                gr1 = int(input ())  #Ο χρηστης ξαναδινει αριθμο γραμμης για νεα καρτα.
                print ('Παικτη ',i+1,' δωσε στηλη ')
                st1 = int(input ())  #Ο χρηστης ξαναδινει αριθμο στηλης για νεα καρτα.
                while gr1 > 4:
                    gr1 = int(input ('Παικτη ξαναδωσε γραμμη '))
                while st1 > 4: 
                    st1 = int(input ('Παικτη ξαναδωσε στηλη ')) 
                

            card1 = '  '+listofcards2[gr1-1][st1-1]+'  ' #Η πρωτη καρτα που επελεξε αντιστοιχει στη λιστα στη θεση gr1-1 ,st1-1
            
            listofcards[gr1-1][st1-1] = card1 #Η καρτα που επιλεχθη αντιστοιχιζεται στον πινακα κλειστων καρτων, στην ακριβη της θεση. Μιλαμε για παραλληλη αντιστοιχηση.
            
            
            for b in range (0,4):
                print(b+1, listofcards[b]) 

            
            print('Παικτη ',i+1,' δωσε γραμμη ')
            gr2 = int(input())#Oπου gr2 ειναι η γραμμη στον πινακα απο την οποια θα ανοιξει η δευτερη καρτα. 
            print ('Παικτη ',i+1,' δωσε στηλη ') 

            st2 = int(input())#Οπου st2 ειναι η γραμμη στον πινακα απο την οποια θα ανοιξει η δευτερη καρτα. 

            while gr2 > 4:#Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                gr2 = int(input ('Παικτη ξαναδωσε γραμμη '))
            while st2 > 4:#Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                st2 = int(input ('Παικτη ξαναδωσε στηλη '))
            

            while listofcards[gr2-1][st2-1] != ('  XXX  '):# Επαναληψη που πραγματοποιειται ακριβως οπως η προηγουμενη για την πρωτη καρτα,αυτη τη φορα για τη δευτερη.
                print('Η καρτα ειναι ηδη ανοιχτη! Ξαναδωσε ')
                print('Παικτη ',i+1,' δωσε γραμμη ')
                gr2 = int(input ())  
                print ('Παικτη ',i+1,' δωσε στηλη ')
                st2 = int(input ())
                while gr2 > 4: #Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                    gr2 = int(input ('Παικτη ξαναδωσε γραμμη '))
                while st2 > 4: #Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                    st2 = int(input ('Παικτη ξαναδωσε στηλη ')) 



     
            card2 = '  '+listofcards2[gr2-1][st2-1]+'  ' #Η δευτερη καρτα που επελεξε αντιστοιχει στη λιστα στη θεση gr[2-1], st[2-1]
            listofcards[gr2-1][st2-1] = card2

            for c in range (0,4):
                print(c+1, listofcards[c])

            card1.split() #Χρησιμοποιουμε τη μεθοδο split ετσι ωστε να αποκοψουμε το συμβολο (σπαθι,καρω,μπαστουνι,κουπα) και επειτα να ελεγξουμε τα συμβολα
            # της καρτας (10, J, Q, K) μεταξυ των δυο φυλλων. Αν τα συμβολα ταιριαζουν τοτε οι καρτες θα μεινουν ανοιχτες και ο παικτης θα παρει τους ποντους αλλιως θα ξανακλεισουν.
            card2.split()
    #Ελεγχος ειδικων καρτων



            if card1[2] == 'J' and card2[2] == 'J': #Αν και οι δυο καρτες που ανοιχτηκαν απο τον προηγουμενο παικτη κατεχουν το συμβολο του Βαλε τοτε 
                    i = i - 1                           #Μειωνεται το i, επιστρεφουμε στον προηγουμενο παικτη ο οποιος ξαναπαιζει συμφωνα με τους κανονες.
                    
            if card1[2]=='K' and card2[2]=='K' :    #Αν και οι δυο καρτες που ανοιχτηκαν απο τον προηγουμενο παικτη κατεχουν το συμβολο του Βαλε τοτε
                    i = i + 1                           #Αυξανεται το i και παιζει ο επομενος παικτης, συμφωνα με τους κανονες.

            if i > (players - 1):
                i = 0

            if card1[2] == card2[2]: #Ισοτητα που ελεγχει εαν οι δυο καρτες που επιλεχθηκαν κατεχουν ιδιο συμβολο
               score[i] += 10  #Αν ναι το σκορ του παικτη αυξανεται κατα 10 ποντους οπως ακριβως προσταζουν οι κανονες.
               print('Επιτυχές ταίριασμα +10 πόντοι! Παίκτη ',i+1, ' έχεις συνολικά ',score[i], ' πόντους ')
               n += 2 #Ειχαμε επιτυχες ταιριασμα αρα αυξανεται το n κατα δυο μοναδες η αλλιως ακομα δυο ανοιχτες καρτες.

            else:
               if not(((card1[2]=='K') and (card2[2]=='Q')) or ((card1[2]=='Q') and (card2[2]=='K'))): #Ελεγχος αρνησης τριτης ειδικης καρτας. Αν δεν εχουμε ταυτοχρονα Ρηγα και Νταμα.
                   print('Πηρες 0 βαθμους σε αυτο το γυρο ')
                   listofcards[gr1-1][st1-1] = '  XXX  ' #Οι καρτες κλεινουν αν δεν ταιριαζουν τα συμβολα μεταξυ τους.
                   listofcards[gr2-1][st2-1] = '  XXX  ' #Στην περιπτωση αυτη αντικαθιστανται παλι με το τριπλο ΧΧΧ που συμβολιζει την κλειστη καρτα.
            



            #Διαδικασια επιλογης τριτης καρτας ,σε περιπτωση που η πρωτη του καρτα ειναι Νταμα και η δευτερη του Ρηγας (η και το αντιστροφο).
            if ((card1[2]=='K') and (card2[2]=='Q')) or ((card1[2]=='Q') and (card2[2]=='K')):
                print('Παικτη ', i+1, ' λογω του ειδικου συνδυασμου που πετυχες, εχεις το δικαιωμα να ανοιξεις τριτη καρτα! ')
                print('Παικτη ',i+1,' δωσε γραμμη ')
                gr3 = int(input ()) #Οπου gr3 ειναι η γραμμη στον πινακα ,απο την οποια θα ανοιξει τριτη καρτα. 
                print ('Παικτη ',i+1,' δωσε στηλη ')
                st3 = int(input ()) #Οπου st3 ειναι η στηλη στον πινακα , απο την οποια θα ανοιξει η τριτη καρτα.
                while listofcards[gr3-1][st3-1] != ('  XXX  '):
                    print('Η καρτα ειναι ηδη ανοιχτη! Ξαναδωσε ')
                    print('Παικτη ',i+1,' δωσε γραμμη ')
                    gr3 = int(input ())  
                    print ('Παικτη ',i+1,' δωσε στηλη ')
                    st3 = int(input ())
                    while gr3 > 4: #Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                        gr3 = int(input ('Παικτη ξαναδωσε γραμμη '))
                    while st3 > 4: #Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                        st3 = int(input ('Παικτη ξαναδωσε στηλη ')) 
                
                card3 = '  '+listofcards2[gr3-1][st3-1]+'  '
                listofcards[gr3-1][st3-1] = card3
                card3.split


                if (card1[2] == card3[2]):
                    score[i] += 10
                    print('Επιτυχές ταίριασμα +10 πόντοι! Παίκτη ',i+1, ' έχεις συνολικά ',score[i], ' πόντους ')
                    listofcards[gr2-1][st2-1] = '  XXX  '
                    n += 2
                elif (card2[2] == card3[2]):
                    score[i] += 10
                    print('Επιτυχές ταίριασμα +10 πόντοι! Παίκτη ',i+1, ' έχεις συνολικά ',score[i], ' πόντους ')
                    n += 2
                    listofcards[gr1-1][st1-1] = '  XXX  '
                elif(card1[2] != card3[2]) and (card2[2] != card3[2]):
                    print('Πηρες 0 βαθμους σε αυτο το γυρο ')
                    listofcards[gr1-1][st1-1] = '  XXX  ' 
                    listofcards[gr2-1][st2-1] = '  XXX  ' 
                    listofcards[gr3-1][st3-1] = '  XXX  '

            for c in range (0,4):
                print(c+1, listofcards[c])        
               

            i = i+1 #Ο αριθμος των παικτων αυξανει κατα ενα.
            if i >= players : #Εαν ο αριθμος του μετρητη υπερβει το οριο της δωθεισας τιμης παικτων:
                i = 0 #Ο μετρητης μηδενιζει και ξαναπαιζουν ολοι απο την αρχη μεχρις οτου ολοκληρωθει το παιχνιδι.
            
elif level == '2':
    # MEDIUM LEVEL



    listofcards = [] #Η πρωτη λιστα με καρτες. Θα χρησιμοποιηθει για την αναπαρασταση των κλειστων φυλλων.
    x1 = []
    x2 = []
    x3 = []
    x4 = []
    for i in range (0, 10):
        x1.append('  XXX  ')
        x2.append('  XXX  ') 
        x3.append('  XXX  ')
        x4.append('  XXX  ')
    listofcards = [ x1, x2, x3, x4]
    substitute1 = listofcards #Την αποθηκευω σε μεταβλητη substitute1 σε περιπτωση που τροποποιηθει η listofcards1 και τη χρειαστω στην αρχικη της μορφη

    #............................................................................................................................



    listofcards2 = []
    HEART   = ("\u2665")  #Καρδια/Κουπα
    SPADES  = ("\u2663")  #Σπαθι/Τριφυλλι                           
    CLUB    = ("\u2660")  #Μπαστουνι
    DIAMOND = ("\u2666")  #Ρομβος/Καρω


    for i in range (0,40): #Σε καθε περασμα τεσσαρων i προστιθενται στη λιστα τεσσερις φορες ενας αριθμος. Οι αριθμοι ξεκινουν απο Α εως 10.
        if i <= 3:
            listofcards2.append('A') 
        elif i <= 7:
            listofcards2.append('2')  
        elif i <= 11:
            listofcards2.append('3')  
        elif i <= 15:
            listofcards2.append('4')
        elif i <= 19:
            listofcards2.append('5')
        elif i <= 23:
            listofcards2.append('6')
        elif i <= 27:
            listofcards2.append('7')
        elif i <= 31:
            listofcards2.append('8')
        elif i <= 35:
            listofcards2.append('9')
        elif i <= 39:
            listofcards2.append('10')



    for i in range (0,40,4):
        listofcards2[i] += HEART    #Στις θεσεις 0, 4, 8, 12 τοποθετειται το συμβολο της κουπας ωστε να υπαρχει καθε αριθμος μεταξυ Α και 10 σε κουπα.
    for i in range (1,40,4):
        listofcards2[i] += SPADES   #Στις θεσεις 1, 5, 9, 13 τοποθετειται το συμβολο του σπαθιου ωστε να υπαρχεικαθε αριθμος μεταξυ Α και 10 σε σπαθι.
    for i in range (2,40,4):
        listofcards2[i] += CLUB     #Στις θεσεις 2, 6, 10, 14 τοποθετειται το συμβολο του μπαστουνιου ωστε να υπαρχει καθε αριθμος μεταξυ Α και 10 σε μπαστουνι. 
    for i in range (3,40,4):
        listofcards2[i] += DIAMOND  #Στις θεσεις 3, 7, 11, 15 τοποθετειται το συμβολο του καρω ωστε να υπαρχει καθε αριθμος μεταξυ Α και 10 σε καρω.



    import random
    random.shuffle(listofcards2) #Σε αυτο το σημειο ανακατευουμε τυχαια τις καρτες του πινακα με τη συναρτηση  shuffle. Καθε φορα η λιστα ανακατευεται διαφορετικα!


    substitute = listofcards2 #Αποθηκευω στη μεταβλητη substitute τη λιστα ως εχει διοτι θα την ξανατροποποιησω και μπορει να χρειστει στην τωρινη της μορφη.

    randomlist1 = [] 
    randomlist2 = []
    #Σε αυτο το σημειο φτιαχνω 4 κενες λιστες οι οποιες θα μου φανουν χρησιμες παρακατω. Σκοπος ειναι σε καθε λιστα να προσθετουμε 4 στοιχεια 
    randomlist3 = []
    randomlist4 = []

    for i in range (0,10):
        randomlist1.append(listofcards2[i])
    for i in range (10,20):
        randomlist2.append(listofcards2[i])
    for i in range (20,30):
        randomlist3.append(listofcards2[i])
    for i in range (30,40):
        randomlist4.append(listofcards2[i])

    #Στις προηγουμενες επαναληψεις προσθεσαμε σε καθε λιστα 4 στοιχεια της listofcards2.
    #Ετσι διαιρεσαμε την αρχικη λιστα σε 4 υπολιστες που η καθε μια περιεχει 4 καρτες οπως μας τις παρεδωσε η shuffle
    #Σκοπος ειναι να εμφανιζουμε τις καρτες σε 4 γραμμες, 4 καρτες τη φορα. Εμφανιζοντας μια λιστα τεσσαρων στοιχειων τη φορα επιτυγχανεται αυτο.


    listofcards2 = [randomlist1, randomlist2, randomlist3, randomlist4] #Προσθετω στην λιστα καρτων τις υπολιστες


    listofscore = [] #Λιστα στην οποια προσθετουμε στην πορεια τα σκορ ολων των παικτων. Τωρα μηδενιζουμε τη λιστα.
    score = 0 #Μεταβλητη score η οποια λειτουργει σαν μετρητης του καθε παικτη ξεχωριστα. Μηδενιζεται καθως λειτουργει ως μετεπειτα αθροιστης.

    n = 0 #Το n λειτουργει σαν μετρητης ανοιχτων καρτων. Οταν το n = 16 σημαινει οτι ολες οι καρτες ανοιξαν και σταματαει το παιχνιδι.

    for c in range (0,4):
        print(c+1, listofcards2[c])#Σε αυτο το σημειο τυπωνονται ολες οι καρτες ανοιχτες οπως ζητειται απο την εκφωνηση.

    score=[]
    for i in range(players):
        score.append(0)

    i = 0 #Οπου i μετρητης παικτων στη μετεπειτα while. Εδω μηδενιζουμε το μετρητη.

    while n < 40: #Οσο n < 16 συνεχιζεται το παιχνιδι.

         while i < players : #Προσπελαση ολων των παικτων ωστε να δωθουν δυο καρτες απο τον καθενα.  


            print('Παικτη ',i+1,' δωσε γραμμη ')
            gr1 = int(input ()) #Οπου gr1 ειναι η γραμμη στον πινακα ,απο την οποια θα ανοιξει η πρωτη καρτα. 
            print ('Παικτη ',i+1,' δωσε στηλη ')
            st1 = int(input ()) #Οπου st1 ειναι η στηλη στον πινακα , απο την οποια θα ανοιξει η πρωτη καρτα.


            
            while gr1 > 4: #Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                gr1 = int(input ('Παικτη ξαναδωσε γραμμη '))
            while st1 > 10: #Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                st1 = int(input ('Παικτη ξαναδωσε στηλη '))

            while listofcards[gr1-1][st1-1] != ('  XXX  '): #Σε περιπτωση που η καρτα που επιλεχθηκε απο τον χρηστη ειναι ηδη ανοιχτη ισχυουν τα παρακατω:
                print('Η καρτα ειναι ηδη ανοιχτη! Ξαναδωσε ')
                print('Παικτη ',i+1,' δωσε γραμμη ')
                gr1 = int(input ())  #Ο χρηστης ξαναδινει αριθμο γραμμης για νεα καρτα.
                print ('Παικτη ',i+1,' δωσε στηλη ')
                st1 = int(input ())  #Ο χρηστης ξαναδινει αριθμο στηλης για νεα καρτα.
                while gr1 > 4:
                    gr1 = int(input ('Παικτη ξαναδωσε γραμμη '))
                while st1 > 10: 
                    st1 = int(input ('Παικτη ξαναδωσε στηλη ')) 
                

            card1 = '  '+listofcards2[gr1-1][st1-1]+'  ' #Η πρωτη καρτα που επελεξε αντιστοιχει στη λιστα στη θεση gr1-1 ,st1-1
            
            listofcards[gr1-1][st1-1] = card1 #Η καρτα που επιλεχθη αντιστοιχιζεται στον πινακα κλειστων καρτων, στην ακριβη της θεση. Μιλαμε για παραλληλη αντιστοιχηση.
            
            
            for b in range (0,4):
                print(b+1, listofcards[b]) 

            
            print('Παικτη ',i+1,' δωσε γραμμη ')
            gr2 = int(input())#Oπου gr2 ειναι η γραμμη στον πινακα απο την οποια θα ανοιξει η δευτερη καρτα. 
            print ('Παικτη ',i+1,' δωσε στηλη ') 

            st2 = int(input())#Οπου st2 ειναι η γραμμη στον πινακα απο την οποια θα ανοιξει η δευτερη καρτα. 

            while gr2 > 4:#Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                gr2 = int(input ('Παικτη ξαναδωσε γραμμη '))
            while st2 > 10:#Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                st2 = int(input ('Παικτη ξαναδωσε στηλη '))
            

            while listofcards[gr2-1][st2-1] != ('  XXX  '):# Επαναληψη που πραγματοποιειται ακριβως οπως η προηγουμενη για την πρωτη καρτα,αυτη τη φορα για τη δευτερη.
                print('Η καρτα ειναι ηδη ανοιχτη! Ξαναδωσε ')
                print('Παικτη ',i+1,' δωσε γραμμη ')
                gr2 = int(input ())  
                print ('Παικτη ',i+1,' δωσε στηλη ')
                st2 = int(input ())
                while gr2 > 4: #Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                    gr2 = int(input ('Παικτη ξαναδωσε γραμμη '))
                while st2 > 10: #Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                    st2 = int(input ('Παικτη ξαναδωσε στηλη ')) 



     
            card2 = '  '+listofcards2[gr2-1][st2-1]+'  ' #Η δευτερη καρτα που επελεξε αντιστοιχει στη λιστα στη θεση gr[2-1], st[2-1]
            listofcards[gr2-1][st2-1] = card2

            for c in range (0,4):
                print(c+1, listofcards[c])

            card1.split() #Χρησιμοποιουμε τη μεθοδο split ετσι ωστε να αποκοψουμε το συμβολο (σπαθι,καρω,μπαστουνι,κουπα) και επειτα να ελεγξουμε τα συμβολα
            # της καρτας (Α,2,3,4,5,6,7,8,9,10) μεταξυ των δυο φυλλων. Αν τα συμβολα ταιριαζουν τοτε οι καρτες θα μεινουν ανοιχτες και ο παικτης θα παρει τους ποντους αλλιως θα ξανακλεισουν.
            card2.split()
            if card1[2] == card2[2]: #Ισοτητα που ελεγχει εαν οι δυο καρτες που επιλεχθηκαν κατεχουν ιδιο συμβολο
                if card1[2] == 'A':
                    score[i] += 1
                else:
                   score[i] += eval(card1[2])  #Αν ναι το σκορ του παικτη αυξανεται κατα 10 ποντους οπως ακριβως προσταζουν οι κανονες.
                print('Επιτυχές ταίριασμα! Παίκτη ',i+1, ' έχεις συνολικά ',score[i], ' πόντους ')
                n += 2 #Ειχαμε επιτυχες ταιριασμα αρα αυξανεται το n κατα δυο μοναδες η αλλιως ακομα δυο ανοιχτες καρτες.

            else:
                print('Πηρες 0 βαθμους σε αυτο το γυρο ')
                listofcards[gr1-1][st1-1] = '  XXX  ' #Οι καρτες κλεινουν αν δεν ταιριαζουν τα συμβολα μεταξυ τους.
                listofcards[gr2-1][st2-1] = '  XXX  ' #Στην περιπτωση αυτη αντικαθιστανται παλι με το τριπλο ΧΧΧ που συμβολιζει την κλειστη καρτα.
            


            for c in range (0,4):
                print(c+1, listofcards[c])        
               

            i = i+1 #Ο αριθμος των παικτων αυξανει κατα ενα.
            if i >= players : #Εαν ο αριθμος του μετρητη υπερβει το οριο της δωθεισας τιμης παικτων:
                i = 0 #Ο μετρητης μηδενιζει και ξαναπαιζουν ολοι απο την αρχη μεχρις οτου ολοκληρωθει το παιχνιδι.
elif level == '3':
    # DIFFICULT LEVEL
    listofcards = [] #Η πρωτη λιστα με καρτες. Θα χρησιμοποιηθει για την αναπαρασταση των κλειστων φυλλων.
    x1 = []
    x2 = []
    x3 = []
    x4 = []
    for i in range (0, 13):
        x1.append('  XXX  ')
        x2.append('  XXX  ') 
        x3.append('  XXX  ')
        x4.append('  XXX  ')
    listofcards = [ x1, x2, x3, x4]
    substitute1 = listofcards #Την αποθηκευω σε μεταβλητη substitute1 σε περιπτωση που τροποποιηθει η listofcards1 και τη χρειαστω στην αρχικη της μορφη

    #............................................................................................................................



    listofcards2 = []
    HEART   = ("\u2665")  #Καρδια/Κουπα
    SPADES  = ("\u2663")  #Σπαθι/Τριφυλλι                           
    CLUB    = ("\u2660")  #Μπαστουνι
    DIAMOND = ("\u2666")  #Ρομβος/Καρω


    for i in range (0,52): #Σε καθε περασμα τεσσαρων i προστιθενται στη λιστα τεσσερις φορες ενας αριθμος. Οι αριθμοι ξεκινουν απο Α εως 10.
        if i <= 3:
            listofcards2.append('A') 
        elif i <= 7:
            listofcards2.append('2')  
        elif i <= 11:
            listofcards2.append('3')  
        elif i <= 15:
            listofcards2.append('4')
        elif i <= 19:
            listofcards2.append('5')
        elif i <= 23:
            listofcards2.append('6')
        elif i <= 27:
            listofcards2.append('7')
        elif i <= 31:
            listofcards2.append('8')
        elif i <= 35:
            listofcards2.append('9')
        elif i <= 39:
            listofcards2.append('10')
        elif i <= 43:
            listofcards2.append('J')
        elif i <= 47:
            listofcards2.append('Q')
        elif i <= 51:
            listofcards2.append('K')
        




    for i in range (0,52,4):
        listofcards2[i] += HEART    #Στις θεσεις 0, 4, 8, 12 τοποθετειται το συμβολο της κουπας ωστε να υπαρχει καθε αριθμος μεταξυ Α και K σε κουπα.
    for i in range (1,52,4):
        listofcards2[i] += SPADES   #Στις θεσεις 1, 5, 9, 13 τοποθετειται το συμβολο του σπαθιου ωστε να υπαρχεικαθε αριθμος μεταξυ Α και K σε σπαθι.
    for i in range (2,52,4):
        listofcards2[i] += CLUB     #Στις θεσεις 2, 6, 10, 14 τοποθετειται το συμβολο του μπαστουνιου ωστε να υπαρχει καθε αριθμος μεταξυ Α και K σε μπαστουνι. 
    for i in range (3,52,4):
        listofcards2[i] += DIAMOND  #Στις θεσεις 3, 7, 11, 15 τοποθετειται το συμβολο του καρω ωστε να υπαρχει καθε αριθμος μεταξυ Α και K σε καρω.



    import random
    random.shuffle(listofcards2) #Σε αυτο το σημειο ανακατευουμε τυχαια τις καρτες του πινακα με τη συναρτηση  shuffle. Καθε φορα η λιστα ανακατευεται διαφορετικα!


    substitute = listofcards2 #Αποθηκευω στη μεταβλητη substitute τη λιστα ως εχει διοτι θα την ξανατροποποιησω και μπορει να χρειστει στην τωρινη της μορφη.

    randomlist1 = [] 
    randomlist2 = []
    #Σε αυτο το σημειο φτιαχνω 4 κενες λιστες οι οποιες θα μου φανουν χρησιμες παρακατω. Σκοπος ειναι σε καθε λιστα να προσθετουμε 4 στοιχεια 
    randomlist3 = []
    randomlist4 = []

    for i in range (0,13):
        randomlist1.append(listofcards2[i])
    for i in range (13,26):
        randomlist2.append(listofcards2[i])
    for i in range (26,39):
        randomlist3.append(listofcards2[i])
    for i in range (39,52):
        randomlist4.append(listofcards2[i])

    #Στις προηγουμενες επαναληψεις προσθεσαμε σε καθε λιστα 4 στοιχεια της listofcards2.
    #Ετσι διαιρεσαμε την αρχικη λιστα σε 4 υπολιστες που η καθε μια περιεχει 4 καρτες οπως μας τις παρεδωσε η shuffle
    #Σκοπος ειναι να εμφανιζουμε τις καρτες σε 4 γραμμες, 4 καρτες τη φορα. Εμφανιζοντας μια λιστα τεσσαρων στοιχειων τη φορα επιτυγχανεται αυτο.


    listofcards2 = [randomlist1, randomlist2, randomlist3, randomlist4] #Προσθετω στην λιστα καρτων τις υπολιστες


    listofscore = [] #Λιστα στην οποια προσθετουμε στην πορεια τα σκορ ολων των παικτων. Τωρα μηδενιζουμε τη λιστα.
    score = 0 #Μεταβλητη score η οποια λειτουργει σαν μετρητης του καθε παικτη ξεχωριστα. Μηδενιζεται καθως λειτουργει ως μετεπειτα αθροιστης.

    n = 0 #Το n λειτουργει σαν μετρητης ανοιχτων καρτων. Οταν το n = 16 σημαινει οτι ολες οι καρτες ανοιξαν και σταματαει το παιχνιδι.

    for c in range (0,4):
        print(c+1, listofcards2[c])#Σε αυτο το σημειο τυπωνονται ολες οι καρτες ανοιχτες οπως ζητειται απο την εκφωνηση.

    score=[]
    for i in range(players):
        score.append(0)

    i = 0 #Οπου i μετρητης παικτων στη μετεπειτα while. Εδω μηδενιζουμε το μετρητη.

    while n < 52: #Οσο n < 52 συνεχιζεται το παιχνιδι.

        while i < players : #Προσπελαση ολων των παικτων ωστε να δωθουν δυο καρτες απο τον καθενα.


             print('Παικτη ',i+1,' δωσε γραμμη ')
             gr1 = int(input ()) #Οπου gr1 ειναι η γραμμη στον πινακα ,απο την οποια θα ανοιξει η πρωτη καρτα. 
             print ('Παικτη ',i+1,' δωσε στηλη ')
             st1 = int(input ()) #Οπου st1 ειναι η στηλη στον πινακα , απο την οποια θα ανοιξει η πρωτη καρτα.


            
             while gr1 > 4: #Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                 gr1 = int(input ('Παικτη ξαναδωσε γραμμη '))
             while st1 > 13: #Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                 st1 = int(input ('Παικτη ξαναδωσε στηλη '))

             while listofcards[gr1-1][st1-1] != ('  XXX  '): #Σε περιπτωση που η καρτα που επιλεχθηκε απο τον χρηστη ειναι ηδη ανοιχτη ισχυουν τα παρακατω:
                 print('Η καρτα ειναι ηδη ανοιχτη! Ξαναδωσε ')
                 print('Παικτη ',i+1,' δωσε γραμμη ')
                 gr1 = int(input ())  #Ο χρηστης ξαναδινει αριθμο γραμμης για νεα καρτα.
                 print ('Παικτη ',i+1,' δωσε στηλη ')
                 st1 = int(input ())  #Ο χρηστης ξαναδινει αριθμο στηλης για νεα καρτα.
                 while gr1 > 4:
                     gr1 = int(input ('Παικτη ξαναδωσε γραμμη '))
                 while st1 > 13: 
                     st1 = int(input ('Παικτη ξαναδωσε στηλη ')) 
                

             card1 = '  '+listofcards2[gr1-1][st1-1]+'  ' #Η πρωτη καρτα που επελεξε αντιστοιχει στη λιστα στη θεση gr1-1 ,st1-1
            
             listofcards[gr1-1][st1-1] = card1 #Η καρτα που επιλεχθη αντιστοιχιζεται στον πινακα κλειστων καρτων, στην ακριβη της θεση. Μιλαμε για παραλληλη αντιστοιχηση.
            
            
             for b in range (0,4):
                 print(b+1, listofcards[b]) 

            
             print('Παικτη ',i+1,' δωσε γραμμη ')
             gr2 = int(input())#Oπου gr2 ειναι η γραμμη στον πινακα απο την οποια θα ανοιξει η δευτερη καρτα. 
             print ('Παικτη ',i+1,' δωσε στηλη ') 

             st2 = int(input())#Οπου st2 ειναι η γραμμη στον πινακα απο την οποια θα ανοιξει η δευτερη καρτα. 

             while gr2 > 4:#Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                 gr2 = int(input ('Παικτη ξαναδωσε γραμμη '))
             while st2 > 13:#Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                 st2 = int(input ('Παικτη ξαναδωσε στηλη '))
            

             while listofcards[gr2-1][st2-1] != ('  XXX  '):# Επαναληψη που πραγματοποιειται ακριβως οπως η προηγουμενη για την πρωτη καρτα,αυτη τη φορα για τη δευτερη.
                 print('Η καρτα ειναι ηδη ανοιχτη! Ξαναδωσε ')
                 print('Παικτη ',i+1,' δωσε γραμμη ')
                 gr2 = int(input ())  
                 print ('Παικτη ',i+1,' δωσε στηλη ')
                 st2 = int(input ())
                 while gr2 > 4: #Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                     gr2 = int(input ('Παικτη ξαναδωσε γραμμη '))
                 while st2 > 13: #Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                     st2 = int(input ('Παικτη ξαναδωσε στηλη ')) 



     
             card2 = '  '+listofcards2[gr2-1][st2-1]+'  ' #Η δευτερη καρτα που επελεξε αντιστοιχει στη λιστα στη θεση gr[2-1], st[2-1]
             listofcards[gr2-1][st2-1] = card2

             for c in range (0,4):
                 print(c+1, listofcards[c])

             card1.split() #Χρησιμοποιουμε τη μεθοδο split ετσι ωστε να αποκοψουμε το συμβολο (σπαθι,καρω,μπαστουνι,κουπα) και επειτα να ελεγξουμε τα συμβολα
             # της καρτας (Α,2,3,4,5,6,7,8,9,10,J,Q,K) μεταξυ των δυο φυλλων. Αν τα συμβολα ταιριαζουν τοτε οι καρτες θα μεινουν ανοιχτες και ο παικτης θα παρει τους ποντους αλλιως θα ξανακλεισουν.
             card2.split()
    #Ελεγχος ειδικων καρτων

             

             if card1[2] == 'J' and card2[2] == 'J': #Αν και οι δυο καρτες που ανοιχτηκαν απο τον προηγουμενο παικτη κατεχουν το συμβολο του Βαλε τοτε 
                    i = i - 1                           #Μειωνεται το i, επιστρεφουμε στον προηγουμενο παικτη ο οποιος ξαναπαιζει συμφωνα με τους κανονες.
                    
             if card1[2]=='K' and card2[2]=='K' :    #Αν και οι δυο καρτες που ανοιχτηκαν απο τον προηγουμενο παικτη κατεχουν το συμβολο του Βαλε τοτε
                    i = i + 1                           #Αυξανεται το i και παιζει ο επομενος παικτης, συμφωνα με τους κανονες.

             if i > (players - 1):
                i = 0





             
             if card1[2] == card2[2]: #Ισοτητα που ελεγχει εαν οι δυο καρτες που επιλεχθηκαν κατεχουν ιδιο συμβολο
                 if (card1[2] == 'J') or (card1[2] == 'Q') or (card1[2] == 'K'):
                     score[i] += 10
                 elif card1[2] == 'A':
                     score[i] += 1
                 else:
                     score[i] += eval(card1[2])  #Αν ναι το σκορ του παικτη αυξανεται κατα 10 ποντους οπως ακριβως προσταζουν οι κανονες.
                 print('Επιτυχές ταίριασμα! Παίκτη ',i+1, ' έχεις συνολικά ',score[i], ' πόντους ')
                 n += 2 #Ειχαμε επιτυχες ταιριασμα αρα αυξανεται το n κατα δυο μοναδες η αλλιως ακομα δυο ανοιχτες καρτες.


             else:
                 if not(((card1[2]=='K') and (card2[2]=='Q')) or ((card1[2]=='Q') and (card2[2]=='K'))): #Ελεγχος αρνησης τριτης ειδικης καρτας. Αν δεν εχουμε ταυτοχρονα Ρηγα και Νταμα.
                     print('Πηρες 0 βαθμους σε αυτο το γυρο ')
                     listofcards[gr1-1][st1-1] = '  XXX  ' #Οι καρτες κλεινουν αν δεν ταιριαζουν τα συμβολα μεταξυ τους.
                     listofcards[gr2-1][st2-1] = '  XXX  ' #Στην περιπτωση αυτη αντικαθιστανται παλι με το τριπλο ΧΧΧ που συμβολιζει την κλειστη καρτα.
            
            
             #Διαδικασια επιλογης τριτης καρτας ,σε περιπτωση που η πρωτη του καρτα ειναι Νταμα και η δευτερη του Ρηγας (η και το αντιστροφο).
             if ((card1[2]=='K') and (card2[2]=='Q')) or ((card1[2]=='Q') and (card2[2]=='K')):
                 print('Παικτη ', i+1, ' λογω του ειδικου συνδυασμου που πετυχες, εχεις το δικαιωμα να ανοιξεις τριτη καρτα! ')
                 print('Παικτη ',i+1,' δωσε γραμμη ')
                 gr3 = int(input ()) #Οπου gr3 ειναι η γραμμη στον πινακα ,απο την οποια θα ανοιξει τριτη καρτα. 
                 print ('Παικτη ',i+1,' δωσε στηλη ')
                 st3 = int(input ()) #Οπου st3 ειναι η στηλη στον πινακα , απο την οποια θα ανοιξει η τριτη καρτα.
                 while listofcards[gr3-1][st3-1] != ('  XXX  '):
                     print('Η καρτα ειναι ηδη ανοιχτη! Ξαναδωσε ')
                     print('Παικτη ',i+1,' δωσε γραμμη ')
                     gr3 = int(input ())  
                     print ('Παικτη ',i+1,' δωσε στηλη ')
                     st3 = int(input ())
                     while gr3 > 4: #Ελεγχος αν η τιμη της γραμμης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο γραμμων του πινακα.
                         gr3 = int(input ('Παικτη ξαναδωσε γραμμη '))
                     while st3 > 13: #Ελεγχος αν η τιμη της στηλης που δωθηκε ειναι σωστη και δεν υπερβαινει το οριο στηλων του πινακα.
                         st3 = int(input ('Παικτη ξαναδωσε στηλη ')) 
                
                 card3 = '  '+listofcards2[gr3-1][st3-1]+'  '
                 listofcards[gr3-1][st3-1] = card3
                 card3.split


                 if (card1[2] == card3[2]):
                     score[i] += 10
                     print('Επιτυχές ταίριασμα +10 πόντοι! Παίκτη ',i+1, ' έχεις συνολικά ',score[i], ' πόντους ')
                     listofcards[gr2-1][st2-1] = '  XXX  '
                     n += 2
                 elif (card2[2] == card3[2]):
                     score[i] += 10
                     print('Επιτυχές ταίριασμα +10 πόντοι! Παίκτη ',i+1, ' έχεις συνολικά ',score[i], ' πόντους ')
                     n += 2
                     listofcards[gr1-1][st1-1] = '  XXX  '
                 elif(card1[2] != card3[2]) and (card2[2] != card3[2]):
                     print('Πηρες 0 βαθμους σε αυτο το γυρο ')
                     listofcards[gr1-1][st1-1] = '  XXX  ' 
                     listofcards[gr2-1][st2-1] = '  XXX  ' 
                     listofcards[gr3-1][st3-1] = '  XXX  '


             for c in range (0,4):
                 print(c+1, listofcards[c])        
               

             i = i+1 #Ο αριθμος των παικτων αυξανει κατα ενα.
             if i >= players : #Εαν ο αριθμος του μετρητη υπερβει το οριο της δωθεισας τιμης παικτων:
                 i = 0 #Ο μετρητης μηδενιζει και ξαναπαιζουν ολοι απο την αρχη μεχρις οτου ολοκληρωθει το παιχνιδι.




#ΤAΞΙΝΟΜΗΣΗ ΝΙΚΗΤΗ


                
for i in range(len(listofplayers)):
   for j in range(len(listofplayers)-1):
      if score[j] < score[j+1]:
          score[j],score[j+1] = score[j+1],score[j]
          listofplayers[j],listofplayers[j+1] = listofplayers[j+1],listofplayers[j]#Πραγματοποιειεται ταξινομηση φυσσαλιδας

flag = score[0] #Μεταβλητη flag που ισουται με την πρωτη ταξινομημενη τιμη δηλαδη το highscore
metritis = 0 #Mετρητης ο οποιος αρχικοποιειεται με τιμη 0 και επειτα μετραει ( αν υπαρχουν ) περισσοτεροι απο ενας παικτες που να εχουν highscore
y = 0 #Μετρητης ο οποιος αυξανει ως οτου τελειωσει ο αριθμος των παικτων. Χρησιμοποιειται στην παρακατω επαναληψη ως τιμη φρουρος.
while y <= len(listofplayers):
    if flag == score[y+1]:
        metritis += 1
        y +=1
    else:
        y = len(listofplayers) + 1

print('Η υψηλοτερη βαθμολογια ειναι :',score[0])

if metritis == 0:
    print(' Το ονομα του/της πρωταθλητη/τριας ειναι : ', listofplayers[0])
else:
    for i in range(0, metritis+1):
        print('Ονομα συμπρωταθλητη/τριας: ',listofplayers[i])
        


    
               

 
                
